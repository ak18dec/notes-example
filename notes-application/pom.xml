<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.phillip-kruger</groupId>
        <artifactId>notes-example</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>
    
    <groupId>com.github.phillip-kruger.notes</groupId>
    <artifactId>notes-application</artifactId>
    <packaging>war</packaging>
    
    <name>notes-application</name>
    
    <properties>
        <!-- Other libs -->
        <stompee.version>1.1.3</stompee.version>
        <apiee.version>1.0.1</apiee.version>
        
        <!-- Javascript libraries -->
        <semantic-ui.version>2.2.10</semantic-ui.version>
        <jquery.version>2.1.4</jquery.version>
        <bootstrap.version>3.3.7</bootstrap.version>
        <bootstrap.tagsinput.version>0.8.0</bootstrap.tagsinput.version>
        <font-awesome.version>4.7.0</font-awesome.version>
        
        <!-- App servers when using autodeploy -->
        <tomee.installdir>/opt/server/apache-tomee-plume-7.0.4</tomee.installdir>
        <payara.installdir>/opt/server/payara41/</payara.installdir>
        
    </properties>
    
    <dependencies>
        <!-- Stompee -->
        <dependency>
            <groupId>com.github.phillip-kruger</groupId>
            <artifactId>stompee-core</artifactId>
            <version>${stompee.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Apiee -->
        <dependency>
            <groupId>com.github.phillip-kruger</groupId>
            <artifactId>apiee-core</artifactId>
            <version>${apiee.version}</version>
        </dependency>
        <!-- Webjars: see http://www.webjars.org/documentation -->
        <!-- Used in Websocket screens -->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>semantic-ui</artifactId>
            <version>${semantic-ui.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Used in JSF screens -->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>bootstrap-tagsinput</artifactId>
            <version>${bootstrap.tagsinput.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>font-awesome</artifactId>
            <version>${font-awesome.version}</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/*.css</include>
                                <include>**/*.html</include>
                                <include>**/*.xhtml</include>
                            </includes>
                        </resource>
                    </webResources>
                    
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <!-- Activate using the liberty property: mvn clean install -Dliberty -->
        <profile>
            <id>liberty</id>
            <activation>
                <property>
                    <name>liberty</name>
                </property>
            </activation>
            <properties>
                <openliberty.version>17.0.0.3</openliberty.version>
                <openliberty.http.port>8080</openliberty.http.port>
                <openliberty.https.port>8443</openliberty.https.port>
                <openliberty.maven.version>2.1.1</openliberty.maven.version>
                <derby.version>10.14.1.0</derby.version>
            </properties>
            
            <build>
                <resources>
                    <resource>
                        <directory>${basedir}/src/main/liberty/config</directory>
                        <targetPath>${project.build.directory}</targetPath>
                        <filtering>true</filtering>
                        <includes>
                            <include>server.xml</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>${basedir}/src/main/resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <version>${openliberty.maven.version}</version>
                        <configuration>
                            <assemblyArtifact>
                                <groupId>io.openliberty</groupId>
                                <artifactId>openliberty-runtime</artifactId>
                                <version>${openliberty.version}</version>
                                <type>zip</type>
                            </assemblyArtifact>

                            <configFile>${project.build.directory}/server.xml</configFile>
                            <bootstrapProperties>
                                <httpPort>${openliberty.http.port}</httpPort>
                                <httpsPort>${openliberty.https.port}</httpsPort>
                            </bootstrapProperties>
                        </configuration>
                        <executions>
                            
                            <execution>
                                <id>1</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install-server</goal>
                                    <goal>create-server</goal>
                                </goals>
                            </execution>
                        
                            <execution>
                                <id>3</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run-server</goal>    
                                </goals>
                            </execution>
                        
                        </executions>
                    </plugin>


                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>2</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludeScope>test</excludeScope>
                            
                            <artifactItems>

                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derby</artifactId>
                                    <version>${derby.version}</version>
                                    <type>jar</type>
                                    
                                    <outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/defaultServer/lib</outputDirectory>
                                </artifactItem>
                                
                            </artifactItems>
                        </configuration>
                    </plugin>


                </plugins>
                        
            </build>
        </profile>
        
        <!-- Activate using the wildfly property: mvn clean install -Dwildfly -->
        <profile>
            <id>wildfly</id>
            <activation>
                <property>
                    <name>wildfly</name>
                </property>
            </activation>
            
            <properties>
                <wildfly.version>11.0.0.Final</wildfly.version>
                <wildfly.maven.version>1.2.1.Final</wildfly.maven.version>
            </properties>
            
            <build>
                <plugins>
                    
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <id>1</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>http://download.jboss.org/wildfly/${wildfly.version}/wildfly-${wildfly.version}.zip</url>
                                    <unpack>true</unpack>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <md5>cabc51179090c24c2644c118df7422d9</md5>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${wildfly.maven.version}</version>
                        <configuration>
                            
                            <server-config>standalone-full.xml</server-config> 
                            <jboss-home>${project.build.directory}/wildfly-${wildfly.version}</jboss-home>
                        </configuration>
                        <executions>
                            <execution>
                                <id>2</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    
                </plugins>        
            </build>
        </profile>    
        
        <!-- Activate using the tomee property: mvn clean install -Dtomee -->
        <!-- Apiee not working -->
        <profile>
            <id>tomee</id>
            <activation>
                <property>
                    <name>tomee</name>
                </property>
            </activation>
            <build>
                <plugins>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <outputDirectory>${tomee.installdir}/webapps/</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
                        
            </build>
        </profile>
        
        <!-- Activate using the payara property: mvn clean install -Dpayara -->
        <profile>
            <id>payara</id>
            <activation>
                <property>
                    <name>payara</name>
                </property>
            </activation>
            <build>
                <plugins>
                    
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <outputDirectory>${payara.installdir}/glassfish/domains/domain1/autodeploy/</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
                        
            </build>
        </profile>
        
        <!-- Activate using the k8n property: mvn clean install -Dk8 -->
        <profile>
            <id>k8</id>
            <activation>
                <property>
                    <name>k8</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.deanjameseverett</groupId>
                        <artifactId>k8-maven-plugin</artifactId>
                        <version>1.0.3</version>
                        <executions>
                            <execution>
                                <id>kubernetes</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>startMinikube</goal>
                                    <goal>deleteImage</goal>
                                    <goal>buildImage</goal>
                                    <goal>undeploy</goal>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>

            </build>
        </profile>   
        
    </profiles>
    
</project>
